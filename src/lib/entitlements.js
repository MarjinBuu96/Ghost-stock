// Plan names
export const PLAN = {
  FREE: "free",
  STARTER: "starter",
  PRO: "pro",
  ENTERPRISE: "enterprise",
};

// Features
export const FEATURES = {
  MANUAL_SCAN: "MANUAL_SCAN",
  LIVE_KPIS: "LIVE_KPIS",
  EXPORT_CSV: "EXPORT_CSV",

  AUTO_SCAN: "AUTO_SCAN",
  SLACK_WEBHOOK: "SLACK_WEBHOOK",
  TEAMS_WEBHOOK: "TEAMS_WEBHOOK",
  MULTI_STORE: "MULTI_STORE",

  UNIFIED_DASHBOARD: "UNIFIED_DASHBOARD",
  WEBHOOKS: "WEBHOOKS",
  ZAPIER: "ZAPIER",
  RULES_ENGINE: "RULES_ENGINE",
  WHITE_LABEL: "WHITE_LABEL",
  SSO_TEAMS: "SSO_TEAMS",

  // NEW
  RBAC: "RBAC",
  AUDIT_LOGS: "AUDIT_LOGS",
  CYCLE_COUNTS: "CYCLE_COUNTS",
};

const PLAN_FEATURES = {
  [PLAN.FREE]: new Set([FEATURES.MANUAL_SCAN, FEATURES.LIVE_KPIS, FEATURES.EXPORT_CSV]),
  [PLAN.STARTER]: new Set([FEATURES.MANUAL_SCAN, FEATURES.LIVE_KPIS, FEATURES.EXPORT_CSV]),
  [PLAN.PRO]: new Set([
    FEATURES.MANUAL_SCAN, FEATURES.LIVE_KPIS, FEATURES.EXPORT_CSV,
    FEATURES.AUTO_SCAN, FEATURES.SLACK_WEBHOOK, FEATURES.TEAMS_WEBHOOK, FEATURES.MULTI_STORE,
    FEATURES.CYCLE_COUNTS, FEATURES.AUDIT_LOGS, FEATURES.RBAC, FEATURES.RULES_ENGINE,
  ]),
  [PLAN.ENTERPRISE]: new Set([
    FEATURES.MANUAL_SCAN, FEATURES.LIVE_KPIS, FEATURES.EXPORT_CSV,
    FEATURES.AUTO_SCAN, FEATURES.SLACK_WEBHOOK, FEATURES.TEAMS_WEBHOOK, FEATURES.MULTI_STORE,
    FEATURES.UNIFIED_DASHBOARD, FEATURES.WEBHOOKS, FEATURES.ZAPIER,
    FEATURES.RULES_ENGINE, FEATURES.WHITE_LABEL, FEATURES.SSO_TEAMS,
    FEATURES.RBAC, FEATURES.AUDIT_LOGS, FEATURES.CYCLE_COUNTS,
  ]),
};

export function normalizePlan(p) {
  const x = String(p || "").toLowerCase();
  if ([PLAN.FREE, PLAN.STARTER, PLAN.PRO, PLAN.ENTERPRISE].includes(x)) return x;
  return PLAN.STARTER;
}

export function hasFeature(plan, feature) {
  return PLAN_FEATURES[normalizePlan(plan)].has(feature);
}

export function requireEntitlement(plan, feature) {
  if (!hasFeature(plan, feature)) {
    const err = new Error(`feature_not_in_plan:${feature}`);
    err.statusCode = 403;
    return err;
  }
  return null;
}
